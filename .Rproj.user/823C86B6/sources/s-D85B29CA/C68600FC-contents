---
title: "Seurat_Part4_dataextraction"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


## R Markdown

```{r}
library(Seurat)
dir<-"~/Desktop/Nick/Data"
setwd(dir)
library(ggplot2)
filename<-"MG_NS_Part3.RData"
load(file=filename)
MG_NS
```

Get means of each marker gene per cluster (in the cluster, out of the cluster)
```{r}
getGeneClusterMeans <- function(gene, cluster){
  x <- GetAssayData(MG_NS,slot = 'data')[gene,]
  m <- tapply(x, ifelse(MG_NS$celltypecluster == cluster, 1, 0), mean)
  mean.in.cluster <- m[2]
  mean.out.of.cluster <- m[1]
  return(list(mean.in.cluster = mean.in.cluster, mean.out.of.cluster = mean.out.of.cluster))
}

markers_all = read.csv("~/Desktop/Nick/spreadsheets/allmarkersMG_NS_0920.csv",stringsAsFactors = F)
## for sake of time only using first six (head)
means <- mapply(getGeneClusterMeans, markers_all[,"gene"], markers_all[,"cluster"])
means <- matrix(unlist(means), ncol = 2, byrow = T)

colnames(means) <- c("mean.in.cluster", "mean.out.of.cluster")
markers_all2 <- cbind(markers_all, means)
head(markers_all2)
write.csv(markers_all2,"geneclustermeans.csv")
```



Adding in a new metadata column representing samples within clusters


#rownames(experiment.aggregate@meta.data) are cells
#TSNEPlot(object = experiment.sort_contra, group.by="ident", pt.size=0.5, do.label = F)

#FeaturePlot(experiment.sort_contra, features.plot=c('Sparcl1'), pt.size=0.5)
#FeaturePlot(experiment.sort_contra, features.plot=c('Sparc'), pt.size=0.5)





```{r}
filename<-"MG_NS_Part4.RData"
save(MG_NS,file=filename)
```

```{r}
sessionInfo()
```

